// <auto-generated />
using System;
using AileHekimlikSistemi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AileHekimlikSistemi.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HospitalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HospitalId = 1,
                            Name = "eln1",
                            Surname = "akk1",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2175),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            HospitalId = 2,
                            Name = "eln2",
                            Surname = "akk2",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2186),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            HospitalId = 3,
                            Name = "eln3",
                            Surname = "akk3",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2187),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            HospitalId = 4,
                            Name = "eln4",
                            Surname = "akk4",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2188),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HospitalName = "ist. hastanesi",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2351),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            HospitalName = "ankara. hastanesi",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2352),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            HospitalName = "İzmir. hastanesi",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2353),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            HospitalName = "Bursa. hastanesi",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2354),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 35,
                            DoctorId = 1,
                            Name = "hasta1",
                            Surname = "sou1",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2476),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Age = 15,
                            DoctorId = 2,
                            Name = "hasta2",
                            Surname = "soy2",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2477),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Age = 45,
                            DoctorId = 3,
                            Name = "hasta3",
                            Surname = "soy3",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2479),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Age = 65,
                            DoctorId = 4,
                            Name = "hasta4",
                            Surname = "soy4",
                            createdDate = new DateTime(2024, 1, 9, 19, 44, 39, 774, DateTimeKind.Local).AddTicks(2480),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Doctor", b =>
                {
                    b.HasOne("AileHekimlikSistemi.Core.Models.Hospital", "Hospital")
                        .WithMany("Doctors")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Patient", b =>
                {
                    b.HasOne("AileHekimlikSistemi.Core.Models.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("AileHekimlikSistemi.Core.Models.Hospital", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
